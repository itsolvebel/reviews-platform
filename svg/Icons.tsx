import React from 'react';

interface Props {
  fill?: string;
  stroke?: string;
  className?: string;
}

export const location: React.FC<Props> = ({
  fill = 'none',
  stroke = '',
  className = 'w-[16px] h-[16px]',
}: Props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    className={className}
    viewBox='0 0 16 16'
    fill={fill}
    stroke={stroke}
  >
    <g clipPath='url(#clip0_318_340)'>
      <path
        d='M15.5 8.00001C15.5019 6.74034 15.1866 5.50046 14.583 4.39481C13.9794 3.28915 13.1071 2.35333 12.0464 1.6737C10.9858 0.994071 9.77114 0.592529 8.51442 0.506129C7.25771 0.419728 5.99948 0.651252 4.85584 1.17934C3.7122 1.70742 2.71999 2.51505 1.97078 3.5277C1.22156 4.54035 0.739472 5.7254 0.568998 6.97348C0.398525 8.22157 0.545159 9.4925 0.995369 10.669C1.44558 11.8454 2.18486 12.8896 3.14499 13.705C4.49728 14.8594 6.21699 15.4936 7.99499 15.4936C9.773 15.4936 11.4927 14.8594 12.845 13.705C13.6744 13.0031 14.3413 12.1295 14.7997 11.1444C15.2582 10.1594 15.4971 9.0865 15.5 8.00001ZM1.49999 8.00001C1.49866 6.95608 1.74878 5.92719 2.2292 5.00037C2.70963 4.07356 3.40621 3.27609 4.26003 2.67544C5.11385 2.07478 6.09977 1.68861 7.13441 1.5496C8.16904 1.41058 9.22193 1.52281 10.204 1.87679C11.1861 2.23076 12.0685 2.81608 12.7765 3.58321C13.4845 4.35034 13.9974 5.27672 14.2716 6.28397C14.5459 7.29123 14.5735 8.34973 14.3522 9.36992C14.1308 10.3901 13.667 11.342 13 12.145V12C13 11.2044 12.6839 10.4413 12.1213 9.87869C11.5587 9.31608 10.7956 9.00001 9.99999 9.00001H5.99999C5.20434 9.00001 4.44128 9.31608 3.87867 9.87869C3.31606 10.4413 2.99999 11.2044 2.99999 12V12.145C2.03023 10.9815 1.4994 9.51466 1.49999 8.00001ZM3.99999 13.115V12C3.99999 11.4696 4.21071 10.9609 4.58578 10.5858C4.96085 10.2107 5.46956 10 5.99999 10H9.99999C10.5304 10 11.0391 10.2107 11.4142 10.5858C11.7893 10.9609 12 11.4696 12 12V13.115C10.8604 14.0137 9.45132 14.5024 7.99999 14.5024C6.54867 14.5024 5.13963 14.0137 3.99999 13.115Z'
        fill='white'
      />
      <path
        d='M8 8C8.49445 8 8.9778 7.85338 9.38893 7.57867C9.80005 7.30397 10.1205 6.91352 10.3097 6.45671C10.4989 5.99989 10.5484 5.49723 10.452 5.01228C10.3555 4.52732 10.1174 4.08187 9.76777 3.73223C9.41814 3.3826 8.97268 3.1445 8.48773 3.04804C8.00277 2.95157 7.50011 3.00108 7.04329 3.1903C6.58648 3.37952 6.19603 3.69995 5.92133 4.11108C5.64662 4.5222 5.5 5.00555 5.5 5.5C5.5 6.16304 5.76339 6.79893 6.23223 7.26777C6.70107 7.73661 7.33696 8 8 8ZM8 4C8.29667 4 8.58668 4.08797 8.83335 4.2528C9.08003 4.41762 9.27229 4.65189 9.38582 4.92598C9.49935 5.20007 9.52906 5.50167 9.47118 5.79264C9.4133 6.08361 9.27044 6.35088 9.06066 6.56066C8.85088 6.77044 8.58361 6.9133 8.29264 6.97118C8.00166 7.02906 7.70006 6.99935 7.42597 6.88582C7.15189 6.77229 6.91762 6.58003 6.7528 6.33336C6.58797 6.08668 6.5 5.79667 6.5 5.5C6.5 5.10218 6.65804 4.72065 6.93934 4.43934C7.22064 4.15804 7.60218 4 8 4Z'
        fill='white'
      />
    </g>
    <defs>
      <clipPath id='clip0_318_340'>
        <rect width='16' height='16' fill='white' />
      </clipPath>
    </defs>
  </svg>
);

export const facebook: React.FC<Props> = ({
  fill = 'none',
  stroke = '',
  className = 'w-[25px] h-[25px]',
}: Props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    className={className}
    viewBox='0 0 24 25'
    fill={fill}
    stroke={stroke}
  >
    <path
      d='M15.1199 5.96261H16.9999V2.78261C16.0896 2.68796 15.175 2.64122 14.2599 2.64261C11.5399 2.64261 9.67986 4.30261 9.67986 7.34261V9.96261H6.60986V13.5226H9.67986V22.6426H13.3599V13.5226H16.4199L16.8799 9.96261H13.3599V7.69261C13.3599 6.64261 13.6399 5.96261 15.1199 5.96261Z'
      fill='white'
    />
  </svg>
);

export const instagram: React.FC<Props> = ({
  fill = 'none',
  stroke = '',
  className = 'w-[24px] h-[25px]',
}: Props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    className={className}
    viewBox='0 0 24 25'
    fill={fill}
    stroke={stroke}
  >
    <g clipPath='url(#clip0_346_630)'>
      <path
        d='M15.182 9.46059C16.9393 11.2179 16.9393 14.0672 15.182 15.8246C13.4246 17.5819 10.5754 17.5819 8.81802 15.8246C7.06066 14.0672 7.06066 11.2179 8.81802 9.46059C10.5754 7.70324 13.4246 7.70324 15.182 9.46059Z'
        fill='white'
      />
      <path
        d='M17.25 0.642578H6.75C3.02782 0.642578 0 3.6704 0 7.39258V17.8926C0 21.6148 3.02782 24.6426 6.75 24.6426H17.25C20.9722 24.6426 24 21.6148 24 17.8926V7.39258C24 3.6704 20.9722 0.642578 17.25 0.642578ZM12 18.6426C8.69164 18.6426 6 15.9517 6 12.6426C6 9.3335 8.69164 6.64258 12 6.64258C15.3084 6.64258 18 9.3335 18 12.6426C18 15.9517 15.3084 18.6426 12 18.6426ZM18.75 6.64258C18.3358 6.64258 18 6.30676 18 5.89258C18 5.4783 18.3358 5.14258 18.75 5.14258C19.1642 5.14258 19.5 5.4783 19.5 5.89258C19.5 6.30676 19.1642 6.64258 18.75 6.64258Z'
        fill='white'
      />
    </g>
    <defs>
      <clipPath id='clip0_346_630'>
        <rect
          width='24'
          height='24'
          fill='white'
          transform='translate(0 0.642578)'
        />
      </clipPath>
    </defs>
  </svg>
);

export const linkedin: React.FC<Props> = ({
  fill = 'none',
  stroke = '',
  className = 'w-[24px] h-[24px]',
}: Props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    className={className}
    viewBox='0 0 24 24'
    fill={fill}
    stroke={stroke}
  >
    <g clipPath='url(#clip0_346_911)'>
      <path
        d='M5.47771 7.96603V23.5199H0.29851V7.96603H5.47771ZM5.80699 3.16411C5.80795 3.19195 5.80891 3.22459 5.80891 3.25819C5.80891 3.97723 5.50363 4.62427 5.01595 5.07739L5.01403 5.07835C4.49083 5.55643 3.79099 5.84923 3.02203 5.84923C2.97499 5.84923 2.92699 5.84827 2.87995 5.84635H2.88667H2.85499C2.81563 5.84827 2.76955 5.84923 2.72347 5.84923C1.97083 5.84923 1.28731 5.55547 0.77947 5.07739L0.78043 5.07835C0.29659 4.60987 -0.00292969 3.95515 -0.00292969 3.23035C-0.00292969 3.20731 -0.00292969 3.18427 -0.00196969 3.16027V3.16411C-0.00292969 3.14395 -0.00292969 3.12091 -0.00292969 3.09787C-0.00292969 2.36635 0.30811 1.70779 0.80443 1.24603L0.80635 1.24507C1.32859 0.769867 2.02651 0.478027 2.79163 0.478027C2.83579 0.478027 2.87899 0.478987 2.92315 0.480907H2.91739C2.95867 0.478987 3.00571 0.478027 3.05467 0.478027C3.80827 0.478027 4.49467 0.768907 5.00731 1.24411L5.00539 1.24219C5.49979 1.71931 5.80699 2.38747 5.80699 3.12763V3.16795V3.16603V3.16411ZM24.1065 14.6073V23.5199H18.9436V15.2015C18.9484 15.1257 18.9503 15.0374 18.9503 14.9491C18.9503 14.0889 18.7113 13.2854 18.2956 12.5999L18.3071 12.6201C17.8972 12.0479 17.2348 11.6803 16.487 11.6803C16.4294 11.6803 16.3718 11.6822 16.3142 11.687H16.3219C16.2959 11.686 16.2662 11.6851 16.2364 11.6851C15.6412 11.6851 15.094 11.8895 14.6611 12.2323L14.6668 12.2284C14.2319 12.5807 13.8911 13.031 13.6761 13.5484L13.6684 13.5705C13.5571 13.9113 13.4937 14.303 13.4937 14.71C13.4937 14.7561 13.4947 14.8022 13.4966 14.8483V14.8415V23.5219H8.33371C8.35483 19.3471 8.36539 15.9622 8.36539 13.367C8.36539 10.7718 8.36027 9.22331 8.35003 8.72155L8.33467 7.96795H13.4976V10.2278H13.4659C13.6713 9.89659 13.8835 9.60955 14.1167 9.34075L14.1091 9.34939C14.3788 9.05275 14.6687 8.78491 14.9807 8.54491L14.9961 8.53339C15.3839 8.23483 15.839 8.00059 16.3324 7.85755L16.3612 7.85083C16.8777 7.69627 17.4719 7.60699 18.0863 7.60699H18.1622H18.1583C18.2265 7.60411 18.3062 7.60219 18.3859 7.60219C19.9996 7.60219 21.4531 8.28763 22.4716 9.38395L22.4745 9.38779C23.5638 10.5756 24.1084 12.3151 24.1084 14.6063L24.1065 14.6073Z'
        fill='white'
      />
    </g>
    <defs>
      <clipPath id='clip0_346_911'>
        <rect width='24' height='24' fill='white' />
      </clipPath>
    </defs>
  </svg>
);

export const search: React.FC<Props> = ({
  fill = 'none',
  stroke = '',
  className = 'w-[24px] h-[24px]',
}: Props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    className={className}
    viewBox='0 0 24 24'
    fill={fill}
    stroke={stroke}
  >
    <g clipPath='url(#clip0_318_571)'>
      <path
        d='M17.6134 15.5151C19.0658 13.5331 19.7163 11.0758 19.4348 8.6348C19.1533 6.19379 17.9605 3.94908 16.095 2.34977C14.2295 0.750457 11.829 -0.0855197 9.37362 0.00909007C6.91825 0.1037 4.58915 1.12192 2.85227 2.86004C1.1154 4.59815 0.098846 6.92799 0.00599324 9.38343C-0.0868595 11.8389 0.750834 14.2388 2.35148 16.1031C3.95213 17.9675 6.19769 19.1587 8.6389 19.4385C11.0801 19.7182 13.5369 19.0659 15.5179 17.6121H15.5164C15.5614 17.6721 15.6094 17.7291 15.6634 17.7846L21.4384 23.5596C21.7196 23.841 22.1012 23.9992 22.4991 23.9994C22.897 23.9995 23.2787 23.8416 23.5601 23.5603C23.8416 23.2791 23.9998 22.8975 23.9999 22.4996C24.0001 22.1017 23.8421 21.72 23.5609 21.4386L17.7859 15.6636C17.7322 15.6093 17.6746 15.5591 17.6134 15.5136V15.5151ZM18.0004 9.74907C18.0004 10.8325 17.787 11.9053 17.3724 12.9062C16.9578 13.9071 16.3501 14.8166 15.584 15.5827C14.8179 16.3488 13.9084 16.9565 12.9075 17.3711C11.9066 17.7857 10.8338 17.9991 9.75037 17.9991C8.66696 17.9991 7.59417 17.7857 6.59323 17.3711C5.5923 16.9565 4.68282 16.3488 3.91674 15.5827C3.15066 14.8166 2.54297 13.9071 2.12836 12.9062C1.71376 11.9053 1.50037 10.8325 1.50037 9.74907C1.50037 7.56104 2.36956 5.46262 3.91674 3.91544C5.46391 2.36827 7.56233 1.49908 9.75037 1.49908C11.9384 1.49908 14.0368 2.36827 15.584 3.91544C17.1312 5.46262 18.0004 7.56104 18.0004 9.74907Z'
        fill='white'
      />
    </g>
    <defs>
      <clipPath id='clip0_318_571'>
        <rect width='24' height='24' fill='white' />
      </clipPath>
    </defs>
  </svg>
);

export const docs: React.FC<Props> = ({
  fill = 'none',
  stroke = '',
  className = 'w-[24px] h-[24px]',
}: Props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    className={className}
    viewBox='0 0 24 24'
    fill={fill}
    stroke={stroke}
  >
    <path
      d='M21.1091 4.76381C21.0304 4.50492 21.1268 4.67934 16.7151 0.252937C16.5781 0.115828 16.395 0.046875 16.2178 0.046875H6.65466C4.56141 0.046875 2.8584 1.74984 2.8584 3.84309V20.1569C2.8584 22.2501 4.56137 23.9531 6.65462 23.9531H17.3434C19.4367 23.9531 21.1396 22.2501 21.1396 20.1569C21.1274 4.02239 21.1676 4.95445 21.1091 4.76381ZM17.3434 22.5469H6.65466C5.33682 22.5469 4.2647 21.4748 4.2647 20.1569V3.84309C4.26465 2.52525 5.33682 1.45312 6.65466 1.45312H15.5147V4.96875C15.5147 5.35706 15.8295 5.67188 16.2178 5.67188H19.7334V20.1569C19.7334 21.4748 18.6613 22.5469 17.3434 22.5469Z'
      fill='#3B3A3A'
    />
    <path
      d='M12.7021 18.3281H7.07715C6.68884 18.3281 6.37402 18.6429 6.37402 19.0312C6.37402 19.4196 6.68884 19.7344 7.07715 19.7344H12.7021C13.0905 19.7344 13.4053 19.4196 13.4053 19.0312C13.4053 18.6429 13.0905 18.3281 12.7021 18.3281ZM16.9209 15.5156H7.07715C6.68884 15.5156 6.37402 15.8304 6.37402 16.2188C6.37402 16.6071 6.68884 16.9219 7.07715 16.9219H16.9209C17.3092 16.9219 17.624 16.6071 17.624 16.2188C17.624 15.8304 17.3093 15.5156 16.9209 15.5156ZM16.9209 12.7031H7.07715C6.68884 12.7031 6.37402 13.0179 6.37402 13.4062C6.37402 13.7946 6.68884 14.1094 7.07715 14.1094H16.9209C17.3092 14.1094 17.624 13.7946 17.624 13.4062C17.624 13.0179 17.3093 12.7031 16.9209 12.7031ZM16.9209 9.89062H7.07715C6.68884 9.89062 6.37402 10.2054 6.37402 10.5938C6.37402 10.9821 6.68884 11.2969 7.07715 11.2969H16.9209C17.3092 11.2969 17.624 10.9821 17.624 10.5938C17.624 10.2054 17.3093 9.89062 16.9209 9.89062Z'
      fill='#3B3A3A'
    />
  </svg>
);

export const share: React.FC<Props> = ({
  fill = 'none',
  stroke = '',
  className = 'w-[24px] h-[24px]',
}: Props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    className={className}
    viewBox='0 0 24 24'
    fill={fill}
    stroke={stroke}
  >
    <path
      opacity='0.2'
      d='M14.25 12C14.25 12.445 14.118 12.88 13.8708 13.25C13.6236 13.62 13.2722 13.9084 12.861 14.0787C12.4499 14.249 11.9975 14.2936 11.561 14.2068C11.1246 14.12 10.7237 13.9057 10.409 13.591C10.0943 13.2763 9.88005 12.8754 9.79323 12.439C9.70642 12.0025 9.75097 11.5501 9.92127 11.139C10.0916 10.7278 10.38 10.3764 10.75 10.1292C11.12 9.88196 11.555 9.75 12 9.75C12.5967 9.75 13.169 9.98705 13.591 10.409C14.0129 10.831 14.25 11.4033 14.25 12Z'
      fill='#534599'
    />
    <path
      d='M18.75 14.25C18.0871 14.2496 17.4429 14.47 16.9191 14.8762L14.7525 13.1887C14.9161 12.8138 15.0003 12.4091 15 12C15 11.9306 15 11.8612 14.9925 11.7928L16.2328 11.3794C16.6252 11.9846 17.2225 12.4281 17.9153 12.6288C18.6081 12.8295 19.35 12.7738 20.0051 12.4721C20.6603 12.1703 21.1847 11.6426 21.4825 10.9857C21.7802 10.3287 21.8313 9.5865 21.6264 8.89494C21.4215 8.20339 20.9743 7.60881 20.3667 7.22013C19.7591 6.83144 19.0318 6.67467 18.318 6.77853C17.6043 6.88238 16.9518 7.23992 16.4802 7.78564C16.0086 8.33135 15.7494 9.02872 15.75 9.75C15.75 9.81937 15.75 9.88875 15.7575 9.95718L14.5172 10.3706C14.2453 9.95028 13.8725 9.60466 13.4329 9.36526C12.9932 9.12586 12.5006 9.00029 12 9C11.8345 9.00034 11.6692 9.01414 11.5059 9.04125L10.8647 7.59375C11.4184 7.15133 11.7976 6.52717 11.9351 5.83189C12.0725 5.1366 11.9594 4.4151 11.6157 3.79526C11.272 3.17542 10.72 2.69727 10.0575 2.44557C9.39491 2.19387 8.66465 2.18486 7.9961 2.42014C7.32755 2.65543 6.76389 3.11982 6.40503 3.73099C6.04616 4.34216 5.91527 5.06066 6.03555 5.75912C6.15582 6.45758 6.5195 7.09091 7.06212 7.54684C7.60475 8.00278 8.29127 8.25188 9.00001 8.25C9.16554 8.24965 9.33078 8.23586 9.49407 8.20875L10.1353 9.6525C9.59153 10.0829 9.21411 10.6888 9.06756 11.3666C8.92102 12.0445 9.01445 12.7522 9.33189 13.3687L6.92157 15.51C6.315 15.1011 5.5801 14.9274 4.85464 15.0216C4.12918 15.1157 3.46296 15.4712 2.98086 16.0214C2.49875 16.5716 2.23387 17.2788 2.23585 18.0103C2.23783 18.7419 2.50655 19.4476 2.99162 19.9952C3.4767 20.5428 4.14484 20.8947 4.8708 20.9849C5.59676 21.0751 6.3307 20.8974 6.93505 20.4852C7.53941 20.073 7.97268 19.4546 8.15366 18.7458C8.33464 18.037 8.2509 17.2865 7.91814 16.635L10.3284 14.4937C10.8503 14.8451 11.4697 15.023 12.0985 15.0022C12.7273 14.9813 13.3335 14.7627 13.8309 14.3775L15.9975 16.065C15.8345 16.4388 15.7502 16.8422 15.75 17.25C15.75 17.8433 15.926 18.4234 16.2556 18.9167C16.5852 19.4101 17.0538 19.7946 17.602 20.0216C18.1501 20.2487 18.7533 20.3081 19.3353 20.1924C19.9172 20.0766 20.4518 19.7909 20.8713 19.3713C21.2909 18.9518 21.5766 18.4172 21.6924 17.8353C21.8081 17.2533 21.7487 16.6501 21.5217 16.1019C21.2946 15.5538 20.9101 15.0852 20.4167 14.7556C19.9234 14.4259 19.3434 14.25 18.75 14.25ZM18.75 8.25C19.0467 8.25 19.3367 8.33797 19.5834 8.50279C19.83 8.66761 20.0223 8.90188 20.1358 9.17597C20.2494 9.45006 20.2791 9.75166 20.2212 10.0426C20.1633 10.3336 20.0205 10.6009 19.8107 10.8107C19.6009 11.0204 19.3336 11.1633 19.0426 11.2212C18.7517 11.2791 18.4501 11.2493 18.176 11.1358C17.9019 11.0223 17.6676 10.83 17.5028 10.5834C17.338 10.3367 17.25 10.0467 17.25 9.75C17.25 9.35217 17.408 8.97064 17.6894 8.68934C17.9707 8.40803 18.3522 8.25 18.75 8.25ZM7.50001 5.25C7.50001 4.95332 7.58799 4.66332 7.75281 4.41664C7.91763 4.16997 8.1519 3.97771 8.42599 3.86418C8.70008 3.75065 9.00168 3.72094 9.29265 3.77882C9.58362 3.8367 9.85089 3.97956 10.0607 4.18934C10.2704 4.39912 10.4133 4.66639 10.4712 4.95736C10.5291 5.24833 10.4994 5.54993 10.3858 5.82402C10.2723 6.09811 10.08 6.33238 9.83337 6.4972C9.58669 6.66202 9.29668 6.75 9.00001 6.75C8.60219 6.75 8.22066 6.59196 7.93935 6.31066C7.65805 6.02935 7.50001 5.64782 7.50001 5.25ZM5.25001 19.5C4.95334 19.5 4.66333 19.412 4.41666 19.2472C4.16998 19.0824 3.97772 18.8481 3.86419 18.574C3.75066 18.2999 3.72096 17.9983 3.77883 17.7074C3.83671 17.4164 3.97957 17.1491 4.18935 16.9393C4.39913 16.7296 4.6664 16.5867 4.95738 16.5288C5.24835 16.4709 5.54995 16.5006 5.82404 16.6142C6.09813 16.7277 6.33239 16.92 6.49722 17.1666C6.66204 17.4133 6.75001 17.7033 6.75001 18C6.75001 18.3978 6.59198 18.7794 6.31067 19.0607C6.02937 19.342 5.64784 19.5 5.25001 19.5ZM10.5 12C10.5 11.7033 10.588 11.4133 10.7528 11.1666C10.9176 10.92 11.1519 10.7277 11.426 10.6142C11.7001 10.5006 12.0017 10.4709 12.2926 10.5288C12.5836 10.5867 12.8509 10.7296 13.0607 10.9393C13.2704 11.1491 13.4133 11.4164 13.4712 11.7074C13.5291 11.9983 13.4994 12.2999 13.3858 12.574C13.2723 12.8481 13.08 13.0824 12.8334 13.2472C12.5867 13.412 12.2967 13.5 12 13.5C11.6022 13.5 11.2207 13.342 10.9394 13.0607C10.658 12.7794 10.5 12.3978 10.5 12ZM18.75 18.75C18.4533 18.75 18.1633 18.662 17.9167 18.4972C17.67 18.3324 17.4777 18.0981 17.3642 17.824C17.2507 17.5499 17.221 17.2483 17.2788 16.9574C17.3367 16.6664 17.4796 16.3991 17.6894 16.1893C17.8991 15.9796 18.1664 15.8367 18.4574 15.7788C18.7483 15.7209 19.0499 15.7506 19.324 15.8642C19.5981 15.9777 19.8324 16.17 19.9972 16.4166C20.162 16.6633 20.25 16.9533 20.25 17.25C20.25 17.6478 20.092 18.0294 19.8107 18.3107C19.5294 18.592 19.1478 18.75 18.75 18.75Z'
      fill='#534599'
    />
  </svg>
);

export const star: React.FC<Props> = ({
  fill = 'none',
  stroke = '',
  className = 'w-[12px] h-[12px]',
}: Props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    className={className}
    viewBox='0 0 12 12'
    fill={fill}
    stroke={stroke}
  >
    <g clipPath='url(#clip0_346_795)'>
      <path
        d='M2.70897 11.5823C2.41947 11.7308 2.09097 11.4705 2.14947 11.1383L2.77197 7.59076L0.129717 5.07376C-0.117033 4.83826 0.0112166 4.40776 0.341967 4.36126L4.01547 3.83926L5.65347 0.594009C5.80122 0.301509 6.20097 0.301509 6.34872 0.594009L7.98672 3.83926L11.6602 4.36126C11.991 4.40776 12.1192 4.83826 11.8717 5.07376L9.23022 7.59076L9.85272 11.1383C9.91122 11.4705 9.58272 11.7308 9.29322 11.5823L5.99997 9.89026L2.70822 11.5823H2.70897Z'
        fill='#534599'
      />
    </g>
    <defs>
      <clipPath id='clip0_346_795'>
        <rect width='12' height='12' fill='white' />
      </clipPath>
    </defs>
  </svg>
);

export const cross: React.FC<Props> = ({
  fill = 'none',
  stroke = '',
  className = 'w-[24px] h-[24px]',
}: Props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    className={className}
    viewBox='0 0 24 24'
    fill={fill}
    stroke={stroke}
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M20.781 3.21895C20.8508 3.28862 20.9062 3.37138 20.944 3.4625C20.9818 3.55362 21.0013 3.6513 21.0013 3.74995C21.0013 3.8486 20.9818 3.94629 20.944 4.0374C20.9062 4.12852 20.8508 4.21128 20.781 4.28095L4.28097 20.781C4.14014 20.9218 3.94913 21.0009 3.74997 21.0009C3.55081 21.0009 3.3598 20.9218 3.21897 20.781C3.07814 20.6401 2.99902 20.4491 2.99902 20.25C2.99902 20.0508 3.07814 19.8598 3.21897 19.719L19.719 3.21895C19.7886 3.14911 19.8714 3.09369 19.9625 3.05588C20.0536 3.01807 20.1513 2.99861 20.25 2.99861C20.3486 2.99861 20.4463 3.01807 20.5374 3.05588C20.6285 3.09369 20.7113 3.14911 20.781 3.21895Z'
      fill='#534599'
    />
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M3.21912 3.21895C3.14928 3.28862 3.09386 3.37138 3.05605 3.4625C3.01824 3.55362 2.99878 3.6513 2.99878 3.74995C2.99878 3.8486 3.01824 3.94629 3.05605 4.0374C3.09386 4.12852 3.14928 4.21128 3.21912 4.28095L19.7191 20.781C19.8599 20.9218 20.051 21.0009 20.2501 21.0009C20.4493 21.0009 20.6403 20.9218 20.7811 20.781C20.9219 20.6401 21.0011 20.4491 21.0011 20.25C21.0011 20.0508 20.9219 19.8598 20.7811 19.719L4.28112 3.21895C4.21145 3.14911 4.12869 3.09369 4.03757 3.05588C3.94645 3.01807 3.84877 2.99861 3.75012 2.99861C3.65147 2.99861 3.55379 3.01807 3.46267 3.05588C3.37155 3.09369 3.28879 3.14911 3.21912 3.21895Z'
      fill='#534599'
    />
  </svg>
);

export const arrow: React.FC<Props> = ({
  fill = 'none',
  stroke = '',
  className = 'w-[278px] h-[36px]',
}: Props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    className={className}
    viewBox='0 0 278 36'
    fill={fill}
    stroke={stroke}
  >
    <path
      d='M113.434 1.99995L113.275 2.98735L113.434 1.99995ZM180.67 31.9999L180.464 32.9786L180.67 31.9999ZM278 24.4999L266.915 21.2678L269.658 32.4841L278 24.4999ZM1 31.9999C1.48225 32.876 1.48223 32.876 1.48222 32.876C1.48222 32.876 1.48222 32.876 1.48222 32.876C1.48221 32.876 1.48222 32.876 1.48224 32.876C1.48227 32.876 1.48235 32.8759 1.48245 32.8759C1.48267 32.8758 1.48303 32.8756 1.48354 32.8753C1.48456 32.8747 1.48616 32.8738 1.48835 32.8726C1.49272 32.8702 1.49942 32.8666 1.50844 32.8616C1.52648 32.8517 1.55378 32.8368 1.59018 32.817C1.66299 32.7773 1.77224 32.718 1.91673 32.6401C2.20571 32.4844 2.63567 32.2543 3.19712 31.9586L2.26509 30.1891C1.69779 30.4879 1.2622 30.7209 0.96782 30.8796C0.820628 30.9589 0.708735 31.0196 0.633329 31.0607C0.595626 31.0813 0.567044 31.0969 0.547732 31.1075C0.538076 31.1128 0.530738 31.1168 0.525735 31.1195C0.523234 31.1209 0.521316 31.122 0.519985 31.1227C0.51932 31.1231 0.518801 31.1233 0.518429 31.1235C0.518243 31.1236 0.518094 31.1237 0.517981 31.1238C0.517925 31.1238 0.517878 31.1238 0.51784 31.1239C0.517821 31.1239 0.517799 31.1239 0.51779 31.1239C0.517771 31.1239 0.517754 31.1239 1 31.9999ZM6.65041 30.1773C7.69227 29.6499 8.87766 29.0579 10.1937 28.413L9.31361 26.617C7.98943 27.2659 6.79626 27.8618 5.74702 28.393L6.65041 30.1773ZM13.6979 26.7214C14.8193 26.188 16.0059 25.6312 17.2524 25.0555L16.4138 23.2398C15.1602 23.8187 13.9669 24.3788 12.8389 24.9153L13.6979 26.7214ZM20.8305 23.4272C21.9889 22.9078 23.1879 22.3777 24.4241 21.8399L23.6262 20.0059C22.383 20.5468 21.1772 21.0799 20.0122 21.6022L20.8305 23.4272ZM28.0319 20.2944C29.2125 19.7966 30.421 19.2947 31.6551 18.7909L30.8993 16.9393C29.6578 17.446 28.4422 17.9508 27.2548 18.4515L28.0319 20.2944ZM35.295 17.3301C36.4946 16.857 37.7146 16.384 38.9529 15.9131L38.242 14.0437C36.9957 14.5177 35.7682 14.9936 34.5612 15.4696L35.295 17.3301ZM42.6294 14.5415C43.8466 14.0962 45.0789 13.6544 46.3245 13.2176L45.6626 11.3303C44.4083 11.7702 43.1677 12.215 41.9424 12.6632L42.6294 14.5415ZM50.0377 11.9443C51.2704 11.5312 52.514 11.1244 53.7669 10.7251L53.1596 8.81952C51.897 9.2219 50.6441 9.63183 49.4023 10.0479L50.0377 11.9443ZM57.507 9.56494C58.7536 9.18901 60.0076 8.82174 61.2675 8.46447L60.7219 6.54033C59.451 6.90072 58.1863 7.2711 56.9296 7.65012L57.507 9.56494ZM65.0469 7.42848C66.3085 7.09476 67.5745 6.77224 68.8433 6.46224L68.3686 4.51939C67.0871 4.8325 65.8088 5.15814 64.5354 5.49498L65.0469 7.42848ZM72.655 5.57156C73.9304 5.28738 75.2072 5.01711 76.4838 4.76204L76.092 2.8008C74.8004 3.05885 73.5093 3.33218 72.2201 3.61942L72.655 5.57156ZM80.3301 4.04059C81.6191 3.81493 82.9065 3.60619 84.1906 3.41571L83.8972 1.43736C82.5952 1.63048 81.2907 1.84202 79.9852 2.07055L80.3301 4.04059ZM88.0627 2.89672C89.3619 2.74168 90.656 2.607 91.9434 2.49408L91.7687 0.501732C90.4596 0.616545 89.1447 0.753404 87.8257 0.910807L88.0627 2.89672ZM95.8294 2.21966C97.1382 2.15032 98.4381 2.10552 99.7274 2.0868L99.6984 0.08701C98.3823 0.106123 97.0568 0.151826 95.7236 0.222465L95.8294 2.21966ZM103.623 2.11206C104.932 2.14909 106.227 2.21561 107.507 2.31328L107.659 0.319072C106.346 0.218864 105.019 0.150746 103.68 0.112861L103.623 2.11206ZM111.368 2.71034C112.009 2.79396 112.644 2.88622 113.275 2.98735L113.592 1.01255C112.941 0.90828 112.286 0.813241 111.627 0.727178L111.368 2.71034ZM113.275 2.98735C113.954 3.09621 114.623 3.21376 115.282 3.33959L115.657 1.37509C114.979 1.24554 114.291 1.12456 113.592 1.01255L113.275 2.98735ZM119.245 4.22195C120.581 4.56301 121.877 4.9387 123.137 5.34502L123.751 3.4415C122.452 3.02278 121.117 2.63557 119.739 2.28406L119.245 4.22195ZM126.963 6.70881C128.242 7.20874 129.487 7.7394 130.704 8.29597L131.536 6.4772C130.287 5.90599 129.007 5.3605 127.691 4.846L126.963 6.70881ZM134.36 10.0822C135.575 10.7121 136.766 11.3649 137.941 12.0352L138.932 10.2979C137.737 9.61631 136.523 8.95054 135.281 8.3067L134.36 10.0822ZM141.463 14.1163C142.632 14.8282 143.791 15.5521 144.949 16.2828L146.016 14.5916C144.854 13.8578 143.685 13.1277 142.504 12.4081L141.463 14.1163ZM148.424 18.4898C149.581 19.225 150.744 19.9612 151.919 20.6912L152.974 18.9926C151.809 18.268 150.653 17.5362 149.497 16.8019L148.424 18.4898ZM155.459 22.8415C156.64 23.5397 157.841 24.2267 159.067 24.8965L160.026 23.1414C158.823 22.4839 157.642 21.8083 156.476 21.1196L155.459 22.8415ZM162.761 26.8151C163.991 27.4201 165.252 28.0039 166.548 28.5616L167.339 26.7244C166.076 26.181 164.846 25.6114 163.643 25.0202L162.761 26.8151ZM170.43 30.107C171.711 30.576 173.028 31.0177 174.386 31.4277L174.965 29.5131C173.644 29.1145 172.364 28.6851 171.117 28.2289L170.43 30.107ZM178.42 32.5191C179.091 32.6801 179.773 32.8334 180.464 32.9786L180.875 31.0213C180.202 30.88 179.539 30.7309 178.886 30.5742L178.42 32.5191ZM180.464 32.9786C181.131 33.1186 181.805 33.2512 182.485 33.3767L182.848 31.4099C182.184 31.2873 181.526 31.1578 180.875 31.0213L180.464 32.9786ZM186.573 34.0364C187.923 34.2247 189.292 34.3885 190.679 34.5292L190.881 32.5394C189.517 32.4011 188.173 32.2403 186.85 32.0556L186.573 34.0364ZM194.794 34.8775C196.155 34.9708 197.529 35.0443 198.913 35.0994L198.993 33.101C197.627 33.0466 196.272 32.9741 194.931 32.8821L194.794 34.8775ZM203.033 35.2098C204.4 35.2293 205.774 35.2326 207.152 35.2209L207.135 33.2209C205.771 33.2325 204.412 33.2293 203.062 33.21L203.033 35.2098ZM211.267 35.1428C212.636 35.103 214.008 35.0497 215.378 34.9841L215.283 32.9864C213.924 33.0514 212.565 33.1042 211.209 33.1436L211.267 35.1428ZM219.484 34.7519C220.855 34.6628 222.223 34.5625 223.585 34.4523L223.423 32.4588C222.072 32.5682 220.714 32.6677 219.355 32.7561L219.484 34.7519ZM227.679 34.0905C229.05 33.9593 230.414 33.819 231.766 33.671L231.548 31.6829C230.205 31.8299 228.851 31.9693 227.488 32.0996L227.679 34.0905ZM235.845 33.1976C237.22 33.0292 238.579 32.8539 239.921 32.6731L239.653 30.691C238.32 30.8708 236.968 31.0451 235.602 31.2124L235.845 33.1976ZM243.991 32.1002C245.371 31.8979 246.727 31.6911 248.056 31.4813L247.744 29.5057C246.422 29.7144 245.073 29.9202 243.701 30.1213L243.991 32.1002ZM252.113 30.8184C253.5 30.5843 254.85 30.3488 256.158 30.1139L255.804 28.1454C254.503 28.3791 253.16 28.6134 251.78 28.8463L252.113 30.8184ZM260.18 29.3708C261.596 29.1017 262.948 28.8367 264.23 28.5794L263.837 26.6185C262.561 26.8746 261.215 27.1382 259.806 27.406L260.18 29.3708ZM268.228 27.7552C269.715 27.4405 271.061 27.146 272.251 26.88L271.814 24.9282C270.632 25.1926 269.293 25.4855 267.814 25.7986L268.228 27.7552Z'
      fill='#FECA57'
    />
  </svg>
);
export const arrow2: React.FC<Props> = ({
  fill = 'none',
  stroke = '',
  className = 'w-[292px] h-[59px]',
}: Props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    className={className}
    viewBox='0 0 292 59'
    fill={fill}
    stroke={stroke}
  >
    <path
      d='M121 3.00002L120.797 3.97928L121 3.00002ZM157.5 46.5L156.639 45.9906L157.5 46.5ZM291.5 10L281.389 4.4238L281.615 15.9686L291.5 10ZM1.5547 36.8321C1.55124 36.8344 1.5585 36.8295 1.58376 36.8142C1.6066 36.8004 1.63765 36.7819 1.6777 36.7586C1.7577 36.7119 1.86666 36.6496 2.00478 36.5719C2.28065 36.4166 2.66545 36.204 3.15331 35.9393L2.19956 34.1814C1.23753 34.7033 0.611182 35.0574 0.4453 35.168L1.5547 36.8321ZM6.64475 34.092C7.67707 33.5568 8.85016 32.9568 10.1514 32.3027L9.25329 30.5157C7.94443 31.1736 6.76385 31.7774 5.72415 32.3165L6.64475 34.092ZM13.6831 30.5523C14.8069 30.0029 15.996 29.4285 17.2452 28.8336L16.3853 27.0278C15.1297 27.6258 13.9344 28.2032 12.8046 28.7556L13.6831 30.5523ZM20.8196 27.1534C21.9752 26.6172 23.171 26.0691 24.4038 25.5118L23.58 23.6894C22.341 24.2494 21.1392 24.8003 19.9778 25.3391L20.8196 27.1534ZM28 23.9078C29.1768 23.3899 30.3814 22.8667 31.6113 22.3402L30.8242 20.5016C29.5879 21.0308 28.3772 21.5567 27.1944 22.0772L28 23.9078ZM35.2398 20.8091C36.4359 20.3117 37.6523 19.8131 38.8869 19.3152L38.1388 17.4604C36.8973 17.9611 35.6744 18.4623 34.4719 18.9624L35.2398 20.8091ZM42.5528 17.86C43.7665 17.3861 44.9951 16.9142 46.237 16.4458L45.5311 14.5745C44.2819 15.0457 43.046 15.5204 41.8253 15.997L42.5528 17.86ZM49.9334 15.077C51.1584 14.6318 52.3941 14.1914 53.639 13.7569L52.98 11.8686C51.7268 12.306 50.4831 12.7493 49.2503 13.1972L49.9334 15.077ZM57.3657 12.4841C58.6073 12.0695 59.8563 11.662 61.1112 11.2628L60.5049 9.35692C59.2407 9.75906 57.9826 10.1696 56.7322 10.5871L57.3657 12.4841ZM64.8729 10.0975C66.1279 9.71927 67.387 9.3506 68.649 8.99268L68.1033 7.06858C66.8305 7.42957 65.5608 7.80131 64.2959 8.18251L64.8729 10.0975ZM72.4441 7.95181C73.714 7.61564 74.9852 7.29154 76.2562 6.98078L75.7812 5.03801C74.4974 5.35189 73.214 5.67912 71.9323 6.01841L72.4441 7.95181ZM80.0825 6.08629C81.3655 5.80044 82.6469 5.5295 83.9249 5.27476L83.5339 3.31334C82.2406 3.57113 80.9446 3.84517 79.6475 4.13415L80.0825 6.08629ZM87.7895 4.55314C89.0878 4.32753 90.3809 4.12023 91.6672 3.9326L91.3785 1.95354C90.0734 2.14391 88.7624 2.35409 87.4471 2.58267L87.7895 4.55314ZM95.5548 3.42424C96.8625 3.27363 98.1611 3.14532 99.449 3.04076L99.2871 1.04732C97.9759 1.15378 96.6548 1.28432 95.326 1.43738L95.5548 3.42424ZM103.349 2.79676C104.668 2.73973 105.974 2.71022 107.263 2.70984L107.263 0.709843C105.943 0.710226 104.609 0.740429 103.263 0.798624L103.349 2.79676ZM111.169 2.80193C112.485 2.86585 113.781 2.96364 115.055 3.09712L115.263 1.10801C113.95 0.970434 112.617 0.869912 111.266 0.804285L111.169 2.80193ZM118.906 3.62313C119.543 3.73163 120.174 3.85026 120.797 3.97928L121.203 2.02076C120.555 1.88682 119.901 1.76384 119.242 1.6515L118.906 3.62313ZM120.797 3.97928C121.452 4.11466 122.099 4.25135 122.741 4.38943L123.162 2.43426C122.515 2.295 121.862 2.15719 121.203 2.02076L120.797 3.97928ZM126.585 5.25352C127.892 5.56027 129.168 5.87393 130.412 6.19515L130.912 4.25867C129.653 3.9335 128.363 3.61632 127.042 3.30643L126.585 5.25352ZM134.218 7.23109C135.51 7.60196 136.761 7.98266 137.972 8.37407L138.587 6.47107C137.354 6.07235 136.081 5.68525 134.77 5.3088L134.218 7.23109ZM141.686 9.65723C142.948 10.1239 144.156 10.6049 145.309 11.1014L146.1 9.26452C144.912 8.75289 143.671 8.25898 142.379 7.78135L141.686 9.65723ZM148.843 12.7622C150.043 13.3798 151.164 14.0191 152.206 14.6818L153.28 12.9942C152.181 12.2955 151.006 11.6262 149.758 10.9839L148.843 12.7622ZM155.318 16.9269C156.342 17.7719 157.249 18.65 158.039 19.5636L159.552 18.2552C158.681 17.2483 157.692 16.2929 156.591 15.3845L155.318 16.9269ZM160.177 22.6289C160.771 23.7256 161.223 24.8736 161.53 26.0789L163.469 25.5849C163.12 24.2164 162.606 22.9146 161.935 21.6762L160.177 22.6289ZM162.011 29.7695C162.029 30.9633 161.926 32.2153 161.693 33.53L163.663 33.8778C163.915 32.4489 164.031 31.0699 164.01 29.7389L162.011 29.7695ZM160.75 37.228C160.373 38.3793 159.907 39.5726 159.351 40.8099L161.176 41.6297C161.758 40.3346 162.249 39.0758 162.651 37.8517L160.75 37.228ZM157.613 44.2838C157.306 44.8447 156.981 45.4136 156.639 45.9906L158.361 47.0094C158.713 46.4144 159.048 45.8265 159.367 45.2458L157.613 44.2838ZM156.639 45.9906C156.319 46.5317 155.976 47.0515 155.613 47.5501L157.229 48.7282C157.63 48.1785 158.008 47.6056 158.361 47.0094L156.639 45.9906ZM153.143 50.3417C152.231 51.1963 151.245 51.9638 150.198 52.6452L151.289 54.3213C152.43 53.5787 153.51 52.7391 154.511 51.8008L153.143 50.3417ZM146.894 54.4309C145.749 54.9376 144.559 55.3597 143.341 55.6979L143.876 57.6251C145.184 57.2619 146.466 56.8075 147.703 56.2598L146.894 54.4309ZM139.635 56.4586C138.383 56.6296 137.118 56.7183 135.855 56.7261L135.868 58.7261C137.215 58.7178 138.567 58.623 139.906 58.4403L139.635 56.4586ZM132.072 56.505C130.808 56.3482 129.565 56.1088 128.358 55.7887L127.846 57.7218C129.142 58.0658 130.475 58.3221 131.826 58.4897L132.072 56.505ZM124.797 54.5594C123.631 54.0547 122.525 53.4648 121.495 52.7923L120.401 54.4667C121.532 55.205 122.739 55.8479 124.003 56.3949L124.797 54.5594ZM118.593 50.4699C117.708 49.6018 116.925 48.6483 116.26 47.6113L114.576 48.6905C115.326 49.8601 116.206 50.9295 117.191 51.8971L118.593 50.4699ZM114.658 44.305C114.272 43.1835 114.002 41.9855 113.867 40.7106L111.878 40.9217C112.029 42.3442 112.331 43.6904 112.768 44.957L114.658 44.305ZM113.848 37.0003C113.954 35.8155 114.166 34.5749 114.495 33.2786L112.556 32.7867C112.203 34.1795 111.972 35.525 111.856 36.8218L113.848 37.0003ZM115.656 29.6954C115.885 29.1111 116.136 28.5172 116.41 27.9138L114.59 27.0862C114.301 27.721 114.036 28.3476 113.794 28.9661L115.656 29.6954ZM116.41 27.9138C116.661 27.363 116.95 26.8263 117.277 26.3033L115.582 25.2424C115.209 25.838 114.878 26.4525 114.59 27.0862L116.41 27.9138ZM119.603 23.4133C120.452 22.5645 121.42 21.7567 122.502 20.9889L121.345 19.3576C120.183 20.1825 119.127 21.0616 118.189 21.9988L119.603 23.4133ZM125.754 18.9821C126.835 18.3981 127.991 17.843 129.218 17.3158L128.429 15.4783C127.153 16.0264 125.943 16.6072 124.804 17.2226L125.754 18.9821ZM132.818 15.9181C134.002 15.5023 135.236 15.1076 136.516 14.7332L135.955 12.8136C134.643 13.197 133.376 13.6025 132.155 14.0311L132.818 15.9181ZM140.292 13.7203C141.536 13.4139 142.817 13.1239 144.131 12.8495L143.722 10.8918C142.386 11.1706 141.083 11.4658 139.814 11.7782L140.292 13.7203ZM147.95 12.1119C149.212 11.8869 150.5 11.6745 151.811 11.4743L151.51 9.4972C150.182 9.69977 148.878 9.91483 147.599 10.143L147.95 12.1119ZM155.719 10.9225C156.993 10.7562 158.287 10.6002 159.599 10.454L159.378 8.46634C158.054 8.61384 156.748 8.77131 155.46 8.93926L155.719 10.9225ZM163.505 10.0522C164.802 9.92943 166.114 9.81533 167.44 9.7095L167.28 7.71584C165.945 7.82242 164.624 7.93736 163.317 8.06111L163.505 10.0522ZM171.341 9.42408C172.642 9.33723 173.955 9.25768 175.278 9.18505L175.168 7.18805C173.838 7.2611 172.517 7.34113 171.207 7.42852L171.341 9.42408ZM179.201 8.99085C180.503 8.93315 181.815 8.88163 183.133 8.83593L183.064 6.83713C181.739 6.88304 180.422 6.93481 179.112 6.9928L179.201 8.99085ZM187.072 8.71695C188.377 8.68316 189.687 8.65465 191.002 8.63107L190.966 6.63139C189.646 6.65506 188.33 6.68369 187.02 6.71762L187.072 8.71695ZM194.948 8.57494C196.255 8.56106 197.566 8.55167 198.879 8.54646L198.871 6.54647C197.553 6.5517 196.238 6.56112 194.927 6.57506L194.948 8.57494ZM202.821 8.54305C204.132 8.54587 205.445 8.55252 206.758 8.56268L206.773 6.56274C205.457 6.55255 204.14 6.54588 202.825 6.54305L202.821 8.54305ZM210.698 8.60346C212.012 8.62037 213.325 8.64049 214.637 8.66352L214.672 6.66383C213.358 6.64075 212.041 6.62058 210.724 6.60362L210.698 8.60346ZM218.579 8.74127C219.894 8.76997 221.206 8.80128 222.514 8.83488L222.565 6.83554C221.255 6.80187 219.94 6.7705 218.623 6.74175L218.579 8.74127ZM226.461 8.94328C227.775 8.98164 229.085 9.02202 230.388 9.06408L230.453 7.06512C229.147 7.02299 227.836 6.98256 226.519 6.94414L226.461 8.94328ZM234.342 9.19721C235.661 9.24339 236.972 9.29099 238.275 9.33965L238.35 7.34104C237.045 7.29233 235.732 7.24467 234.411 7.19843L234.342 9.19721ZM242.218 9.49089C243.544 9.543 244.86 9.59587 246.163 9.64909L246.245 7.65076C244.94 7.5975 243.624 7.54459 242.296 7.49243L242.218 9.49089ZM250.084 9.81137C251.42 9.86734 252.742 9.92328 254.048 9.97873L254.133 7.98053C252.826 7.92507 251.504 7.86912 250.167 7.81312L250.084 9.81137ZM257.98 10.1459C259.311 10.2024 260.623 10.2579 261.915 10.3118L261.998 8.31355C260.707 8.25963 259.396 8.20418 258.065 8.14769L257.98 10.1459ZM265.878 10.4747C267.217 10.5286 268.529 10.5801 269.813 10.6285L269.889 8.62996C268.606 8.58155 267.296 8.53012 265.959 8.4763L265.878 10.4747ZM273.732 10.7694C275.096 10.8157 276.423 10.8574 277.71 10.8937L277.766 8.89449C276.484 8.85834 275.161 8.81674 273.799 8.77057L273.732 10.7694ZM281.675 10.9899C283.054 11.0172 284.376 11.0361 285.636 11.0452L285.651 9.04521C284.4 9.0362 283.087 9.01746 281.715 8.99031L281.675 10.9899Z'
      fill='#FECA57'
    />
  </svg>
);

export const downA: React.FC<Props> = ({
  fill = 'none',
  stroke = '',
  className = 'w-[24px] h-[25px]',
}: Props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    className={className}
    viewBox='0 0 24 25'
    fill={fill}
    stroke={stroke}
  >
    <g clipPath='url(#clip0_318_2678)'>
      <path
        d='M7.415 8.70996L12 13.295L16.585 8.70996L18 10.125L12 16.125L6 10.125L7.415 8.70996Z'
        fill='white'
      />
    </g>
    <defs>
      <clipPath id='clip0_318_2678'>
        <rect
          width='24'
          height='24'
          fill='white'
          transform='translate(0 0.5)'
        />
      </clipPath>
    </defs>
  </svg>
);

export const leftA: React.FC<Props> = ({
  fill = 'none',
  stroke = '',
  className = 'w-[24px] h-[25px]',
}: Props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    className={className}
    viewBox='0 0 24 24'
    fill={fill}
    stroke={stroke}
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M22.5 11.9997C22.5 11.8008 22.421 11.61 22.2803 11.4694C22.1397 11.3287 21.9489 11.2497 21.75 11.2497H4.0605L8.781 6.53073C8.92183 6.3899 9.00095 6.19889 9.00095 5.99973C9.00095 5.80056 8.92183 5.60956 8.781 5.46873C8.64017 5.3279 8.44916 5.24878 8.25 5.24878C8.05084 5.24878 7.85983 5.3279 7.719 5.46873L1.719 11.4687C1.64915 11.5384 1.59374 11.6212 1.55593 11.7123C1.51812 11.8034 1.49866 11.9011 1.49866 11.9997C1.49866 12.0984 1.51812 12.1961 1.55593 12.2872C1.59374 12.3783 1.64915 12.4611 1.719 12.5307L7.719 18.5307C7.85983 18.6716 8.05084 18.7507 8.25 18.7507C8.44916 18.7507 8.64017 18.6716 8.781 18.5307C8.92183 18.3899 9.00095 18.1989 9.00095 17.9997C9.00095 17.8006 8.92183 17.6096 8.781 17.4687L4.0605 12.7497H21.75C21.9489 12.7497 22.1397 12.6707 22.2803 12.5301C22.421 12.3894 22.5 12.1986 22.5 11.9997Z'
      fill='#534599'
    />
  </svg>
);

export const rightA: React.FC<Props> = ({
  fill = 'none',
  stroke = '',
  className = 'w-[24px] h-[24px]',
}: Props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    className={className}
    viewBox='0 0 24 24'
    fill={fill}
    stroke={stroke}
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M1.5 11.9997C1.5 11.8008 1.57902 11.61 1.71967 11.4694C1.86032 11.3287 2.05109 11.2497 2.25 11.2497H19.9395L15.219 6.53073C15.0782 6.3899 14.9991 6.19889 14.9991 5.99973C14.9991 5.80056 15.0782 5.60956 15.219 5.46873C15.3598 5.3279 15.5508 5.24878 15.75 5.24878C15.9492 5.24878 16.1402 5.3279 16.281 5.46873L22.281 11.4687C22.3508 11.5384 22.4063 11.6212 22.4441 11.7123C22.4819 11.8034 22.5013 11.9011 22.5013 11.9997C22.5013 12.0984 22.4819 12.1961 22.4441 12.2872C22.4063 12.3783 22.3508 12.4611 22.281 12.5307L16.281 18.5307C16.1402 18.6716 15.9492 18.7507 15.75 18.7507C15.5508 18.7507 15.3598 18.6716 15.219 18.5307C15.0782 18.3899 14.9991 18.1989 14.9991 17.9997C14.9991 17.8006 15.0782 17.6096 15.219 17.4687L19.9395 12.7497H2.25C2.05109 12.7497 1.86032 12.6707 1.71967 12.5301C1.57902 12.3894 1.5 12.1986 1.5 11.9997Z'
      fill='#534599'
    />
  </svg>
);

export const trustPiolt: React.FC<Props> = ({
  fill = 'none',
  stroke = '',
  className = 'w-[188px] h-[147px]',
}: Props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    className={className}
    viewBox='0 0 188 147'
    fill={fill}
    stroke={stroke}
  >
    <g>
      <path
        d='M58.6587 51.4353H73.9099V54.3578H68.044V70.1391H64.5245V54.3578H58.6587V51.4353ZM73.03 56.4035H75.9629V59.0337C75.9629 58.7415 76.2562 58.4492 76.5495 57.8647C76.8428 57.2802 77.1361 57.2802 77.4294 56.988C77.7227 56.6957 78.3092 56.4035 78.6025 56.4035C78.8958 56.1112 79.4824 56.1112 80.069 56.1112C80.3623 56.1112 80.6556 56.1112 80.6556 56.1112H80.9489V59.0337C80.6556 59.0337 80.6556 59.0337 80.3623 59.0337C80.069 59.0337 80.069 59.0337 79.7757 59.0337C79.1891 59.0337 78.8958 59.0337 78.3092 59.326C77.7227 59.6182 77.4294 59.9105 77.1361 60.2027C76.8428 60.4949 76.5495 61.0794 76.2562 61.6639C75.9629 62.2484 75.9629 62.8329 75.9629 63.7097V70.1391H73.03V56.4035ZM94.7336 70.1391H91.8007V68.3856C91.5074 68.9701 90.9208 69.5546 90.0409 70.1391C89.4543 70.4313 88.5744 70.7236 87.6946 70.7236C85.9348 70.7236 84.7617 70.4313 83.8818 69.2623C83.0019 68.0934 82.7086 66.9244 82.7086 65.1709V56.6957H85.6415V64.8786C85.6415 66.0476 85.9348 66.9244 86.2281 67.5089C86.8147 68.0934 87.4013 68.3856 88.2812 68.3856C88.8677 68.3856 89.4543 68.3856 89.7476 68.0934C90.0409 67.8011 90.6275 67.5089 90.6275 67.2166C90.9208 66.9244 91.2141 66.6321 91.2141 66.0476C91.2141 65.4631 91.5074 65.1709 91.5074 64.5864V56.6957H94.4403V70.1391H94.7336ZM99.7195 65.7554C99.7195 66.6321 100.013 67.2166 100.599 67.5089C101.186 67.8011 101.773 68.0934 102.652 68.0934C102.946 68.0934 103.239 68.0934 103.532 68.0934C103.826 68.0934 104.119 68.0934 104.412 67.8011C104.705 67.8011 104.999 67.5089 105.292 67.2166C105.585 66.9244 105.585 66.6321 105.585 66.3399C105.585 66.0476 105.292 65.7554 105.292 65.4631C104.999 65.1709 104.705 65.1709 104.412 64.8786C104.119 64.8786 103.532 64.5864 102.946 64.5864C102.359 64.5864 101.773 64.2941 101.479 64.2941C100.893 64.2941 100.306 64.0019 100.013 63.7097C99.7195 63.4174 99.1329 63.4174 98.5464 63.1252C98.2531 62.8329 97.6665 62.5407 97.6665 61.9562C97.3732 61.3717 97.3732 60.7872 97.3732 60.2027C97.3732 59.326 97.6665 58.7415 97.9598 58.4492C98.2531 58.157 98.8397 57.5725 99.4262 57.2802C100.013 56.988 100.599 56.6957 101.186 56.6957C101.773 56.6957 102.652 56.4035 103.239 56.4035C103.826 56.4035 104.705 56.4035 105.292 56.6957C105.879 56.6957 106.465 56.988 107.052 57.2802C107.638 57.5725 107.932 58.157 108.225 58.4492C108.518 59.0337 108.812 59.6182 108.812 60.4949H105.585C105.585 59.9105 104.999 59.326 104.705 59.0337C103.826 58.7415 103.239 58.4492 102.652 58.4492C102.359 58.4492 102.066 58.4492 101.773 58.4492C101.479 58.4492 101.186 58.4492 100.893 58.7415C100.599 58.7415 100.306 59.0337 100.306 59.0337C100.013 59.326 100.013 59.326 100.013 59.6182C100.013 59.9104 100.013 60.2027 100.306 60.4949C100.599 60.7872 100.893 60.7872 101.186 61.0794C101.479 61.0794 102.066 61.3717 102.652 61.3717C103.239 61.3717 103.826 61.6639 104.412 61.6639C104.999 61.6639 105.585 61.9562 105.879 62.2484C106.465 62.5407 106.759 62.5407 107.345 62.8329C107.932 63.1252 108.225 63.4174 108.225 64.0019C108.518 64.5864 108.518 64.8786 108.518 65.7554C108.518 66.6321 108.225 67.2166 107.932 67.8011C107.638 68.3856 107.052 68.6778 106.465 69.2623C106.172 69.8468 105.585 70.1391 104.999 70.1391C104.412 70.1391 103.532 70.4313 102.946 70.4313C102.066 70.4313 101.186 70.4313 100.599 70.1391C100.013 69.8468 99.133 69.5546 98.8397 69.2623C98.2531 68.9701 97.9598 68.3856 97.6665 67.8011C97.0799 67.2166 96.7866 66.6321 96.7866 65.7554H99.7195ZM109.691 56.4035H112.038V52.6043H114.971V56.6957H117.61V59.0337H114.971V66.3399C114.971 66.6321 114.971 66.9244 114.971 67.2166C114.971 67.5089 114.971 67.5089 115.264 67.8011C115.557 68.0934 115.557 68.0934 115.557 68.0934C115.851 68.0934 116.144 68.0934 116.437 68.0934C116.73 68.0934 116.73 68.0934 117.024 68.0934C117.317 68.0934 117.317 68.0934 117.61 68.0934V70.1391C117.317 70.1391 117.024 70.1391 116.73 70.1391C116.437 70.1391 116.144 70.1391 115.851 70.1391C114.971 70.1391 114.384 70.1391 114.091 69.8468C113.504 69.8468 113.211 69.5546 112.918 69.2623C112.624 68.9701 112.331 68.6778 112.331 68.0934C112.331 67.8011 112.038 67.2166 112.038 66.6321V58.7415H109.691V56.4035ZM119.663 56.4035H122.596V58.4492C122.89 57.5725 123.476 56.988 124.356 56.6957C125.236 56.4035 125.823 56.1112 126.702 56.1112C127.876 56.1112 128.755 56.4035 129.635 56.6957C130.515 56.988 131.102 57.5725 131.688 58.157C132.275 58.7415 132.568 59.6182 132.861 60.4949C133.155 61.3717 133.155 62.2484 133.155 63.4174C133.155 64.2942 133.155 65.1709 132.861 66.0476C132.568 66.9244 132.275 67.5089 131.688 68.3856C131.102 68.9701 130.515 69.5546 129.929 69.8468C129.049 70.1391 128.462 70.4313 127.289 70.4313C126.996 70.4313 126.409 70.4313 126.116 70.4313C125.823 70.4313 125.236 70.1391 124.943 70.1391C124.649 69.8468 124.063 69.8468 123.769 69.5546C123.476 69.2623 123.183 68.9701 122.89 68.6778V75.3995H119.957V56.4035H119.663ZM130.222 63.4174C130.222 62.8329 130.222 62.2484 129.929 61.6639C129.635 61.0794 129.635 60.4949 129.342 60.2027C129.049 59.9105 128.755 59.326 128.169 59.0337C127.582 58.7415 127.289 58.7415 126.409 58.7415C125.236 58.7415 124.063 59.0337 123.476 59.9105C122.89 60.7872 122.596 61.9562 122.596 63.4174C122.596 64.0019 122.596 64.8786 122.89 65.1709C123.183 65.7554 123.183 66.3399 123.769 66.6321C124.063 66.9244 124.356 67.5089 124.943 67.5089C125.529 67.8011 125.822 67.8011 126.409 67.8011C126.996 67.8011 127.582 67.8011 128.169 67.5089C128.755 67.2166 129.049 66.9244 129.342 66.3399C129.635 65.7554 129.929 65.4631 129.929 64.8786C129.929 64.5864 130.222 64.0019 130.222 63.4174ZM135.501 51.4353H138.434V54.3578H135.501V51.4353ZM135.501 56.4035H138.434V70.1391H135.501V56.4035ZM141.074 51.4353H144.007V70.1391H141.074V51.4353ZM153.099 70.4313C151.925 70.4313 151.046 70.1391 150.166 69.8468C149.286 69.5546 148.699 68.9701 148.113 68.3856C147.526 67.8011 146.94 66.9244 146.646 66.0476C146.353 65.1709 146.06 64.2942 146.06 63.1252C146.06 61.9562 146.353 61.0794 146.646 60.2027C146.94 59.326 147.526 58.4492 148.113 57.8647C148.699 57.2802 149.286 56.6957 150.166 56.4035C151.046 56.1112 151.925 55.819 153.099 55.819C154.272 55.819 155.152 56.1112 156.032 56.4035C156.911 56.6957 157.498 57.2802 158.085 57.8647C158.671 58.4492 159.258 59.326 159.551 60.2027C159.844 61.0794 160.138 61.9562 160.138 63.1252C160.138 64.2942 159.844 65.1709 159.551 66.0476C159.258 66.9244 158.671 67.8011 158.085 68.3856C157.498 68.9701 156.911 69.5546 156.032 69.8468C155.152 70.1391 154.272 70.4313 153.099 70.4313ZM153.099 68.0934C153.685 68.0934 154.272 68.0934 154.858 67.8011C155.445 67.5089 155.738 67.2166 156.032 66.6321C156.325 66.0476 156.618 65.7554 156.618 65.1709C156.618 64.5864 156.911 64.0019 156.911 63.4174C156.911 62.8329 156.911 62.2484 156.618 61.6639C156.618 61.0794 156.325 60.4949 156.032 60.2027C155.738 59.9105 155.445 59.326 154.858 59.0337C154.272 58.7415 153.685 58.7415 153.099 58.7415C152.512 58.7415 151.925 58.7415 151.339 59.0337C150.752 59.326 150.459 59.6182 150.166 60.2027C149.872 60.7872 149.579 61.0794 149.579 61.6639C149.579 62.2484 149.286 62.8329 149.286 63.4174C149.286 64.0019 149.286 64.5864 149.579 65.1709C149.579 65.7554 149.872 66.3399 150.166 66.6321C150.459 67.2166 150.752 67.5089 151.339 67.8011C151.925 67.8011 152.512 68.0934 153.099 68.0934ZM161.018 56.4035H163.364V52.6043H166.297V56.6957H168.936V59.0337H166.297V66.3399C166.297 66.6321 166.297 66.9244 166.297 67.2166C166.297 67.5089 166.297 67.5089 166.59 67.8011C166.883 68.0934 166.883 68.0934 166.883 68.0934C167.177 68.0934 167.47 68.0934 167.763 68.0934C168.057 68.0934 168.057 68.0934 168.35 68.0934C168.643 68.0934 168.643 68.0934 168.936 68.0934V70.1391C168.643 70.1391 168.35 70.1391 168.057 70.1391C167.763 70.1391 167.47 70.1391 167.177 70.1391C166.297 70.1391 165.71 70.1391 165.417 69.8468C164.83 69.8468 164.537 69.5546 164.244 69.2623C163.95 68.9701 163.657 68.6778 163.657 68.0934C163.657 67.8011 163.364 67.2166 163.364 66.6321V58.7415H161.018V56.4035Z'
        fill='#191919'
      />
      <path
        d='M55.139 51.4353H41.3543L37.2482 38.2842L32.8488 51.4353H19.3574L30.2092 59.3259L26.1031 72.477L37.2482 64.2941L48.1 72.477L43.9939 59.3259L55.139 51.4353Z'
        fill='#00B67A'
      />
      <path
        d='M44.8736 62.2484L43.9938 59.3259L37.248 64.2941L44.8736 62.2484Z'
        fill='#005128'
      />
      <path
        d='M47.5134 80.6599H19.3574V108.716H47.5134V80.6599Z'
        fill='#00B67A'
      />
      <path
        d='M77.7224 80.6599H49.5664V108.716H77.7224V80.6599Z'
        fill='#00B67A'
      />
      <path
        d='M108.225 80.6599H80.0688V108.716H108.225V80.6599Z'
        fill='#00B67A'
      />
      <path
        d='M138.434 80.6599H110.278V108.716H138.434V80.6599Z'
        fill='#00B67A'
      />
      <path
        d='M168.936 80.6599H140.78V108.716H168.936V80.6599Z'
        fill='#DCDCE6'
      />
      <path
        d='M140.78 80.6599H154.858V108.423H140.78V80.6599Z'
        fill='#00B67A'
      />
      <path
        d='M33.142 99.3638L37.5414 98.1948L39.3011 103.747L33.142 99.3638ZM43.1139 92.3499H35.4883L33.142 85.3359L30.7957 92.3499H23.4634L29.6225 96.7335L27.2762 103.747L33.4353 99.3638L37.2481 96.7335L43.1139 92.3499Z'
        fill='white'
      />
      <path
        d='M63.6446 99.3638L68.044 98.1948L69.8037 103.747L63.6446 99.3638ZM73.3232 92.3499H65.6976L63.3513 85.3359L61.005 92.3499H53.3794L59.5385 96.7335L57.1922 103.747L63.3513 99.3638L67.1641 96.7335L73.3232 92.3499Z'
        fill='white'
      />
      <path
        d='M94.147 99.3638L98.5464 98.1948L100.306 103.747L94.147 99.3638ZM103.826 92.3499H96.2001L93.8538 85.3359L91.5074 92.3499H83.8818L90.041 96.7335L87.9879 103.747L94.147 99.3638L97.9598 96.7335L103.826 92.3499Z'
        fill='white'
      />
      <path
        d='M124.356 99.3638L128.755 98.1948L130.515 103.747L124.356 99.3638ZM134.328 92.3499H126.702L124.356 85.3359L122.009 92.3499H114.384L120.543 96.7335L118.197 103.747L124.356 99.3638L128.169 96.7335L134.328 92.3499Z'
        fill='white'
      />
      <path
        d='M154.858 99.3638L159.258 98.1948L161.017 103.747L154.858 99.3638ZM164.537 92.3499H156.911L154.565 85.3359L152.512 92.3499H144.886L151.045 96.7335L148.699 103.747L154.858 99.3638L158.671 96.7335L164.537 92.3499Z'
        fill='white'
      />
    </g>
  </svg>
);

export const crossIcon: React.FC<Props> = ({
  fill = 'none',
  stroke = '',
  className = 'w-[20px] h-[21px]',
}: Props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    className={className}
    viewBox='0 0 20 21'
    fill={fill}
    stroke={stroke}
  >
    <path
      d='M12.4243 8.52421L10.4481 10.4997L12.4243 12.4752C12.4801 12.531 12.5243 12.5971 12.5544 12.67C12.5846 12.7428 12.6001 12.8209 12.6001 12.8997C12.6001 12.9785 12.5846 13.0566 12.5544 13.1294C12.5243 13.2023 12.4801 13.2685 12.4243 13.3242C12.3686 13.38 12.3024 13.4242 12.2295 13.4543C12.1567 13.4845 12.0786 13.5 11.9998 13.5C11.921 13.5 11.8429 13.4845 11.7701 13.4543C11.6972 13.4242 11.6311 13.38 11.5753 13.3242L9.59981 11.348L7.62431 13.3242C7.56856 13.38 7.50238 13.4242 7.42955 13.4543C7.35671 13.4845 7.27865 13.5 7.19981 13.5C7.12097 13.5 7.04291 13.4845 6.97007 13.4543C6.89723 13.4242 6.83105 13.38 6.77531 13.3242C6.71956 13.2685 6.67534 13.2023 6.64517 13.1294C6.615 13.0566 6.59947 12.9785 6.59947 12.8997C6.59947 12.8209 6.615 12.7428 6.64517 12.67C6.67534 12.5971 6.71956 12.531 6.77531 12.4752L8.75156 10.4997L6.77531 8.52421C6.66272 8.41162 6.59947 8.25893 6.59947 8.09971C6.59947 7.94049 6.66272 7.78779 6.77531 7.67521C6.88789 7.56262 7.04059 7.49937 7.19981 7.49937C7.35903 7.49937 7.51172 7.56262 7.62431 7.67521L9.59981 9.65146L11.5753 7.67521C11.6311 7.61946 11.6972 7.57524 11.7701 7.54507C11.8429 7.5149 11.921 7.49937 11.9998 7.49937C12.0786 7.49937 12.1567 7.5149 12.2295 7.54507C12.3024 7.57524 12.3686 7.61946 12.4243 7.67521C12.4801 7.73095 12.5243 7.79713 12.5544 7.86997C12.5846 7.94281 12.6001 8.02087 12.6001 8.09971C12.6001 8.17854 12.5846 8.25661 12.5544 8.32944C12.5243 8.40228 12.4801 8.46846 12.4243 8.52421ZM17.3998 10.4997C17.3998 12.0424 16.9423 13.5505 16.0853 14.8332C15.2282 16.1159 14.01 17.1156 12.5847 17.706C11.1595 18.2963 9.59116 18.4508 8.0781 18.1498C6.56505 17.8489 5.17523 17.106 4.08438 16.0151C2.99353 14.9243 2.25065 13.5345 1.94968 12.0214C1.64872 10.5084 1.80318 8.94004 2.39355 7.51478C2.98391 6.08951 3.98366 4.87132 5.26636 4.01424C6.54906 3.15717 8.05711 2.69971 9.59981 2.69971C11.6678 2.70189 13.6505 3.52438 15.1128 4.98669C16.5751 6.449 17.3976 8.43169 17.3998 10.4997ZM16.1998 10.4997C16.1998 9.19435 15.8127 7.91831 15.0875 6.83294C14.3623 5.74758 13.3315 4.90164 12.1255 4.4021C10.9195 3.90256 9.59249 3.77186 8.31221 4.02652C7.03194 4.28119 5.85593 4.90978 4.9329 5.8328C4.00988 6.75583 3.38129 7.93184 3.12663 9.21211C2.87196 10.4924 3.00266 11.8194 3.5022 13.0254C4.00174 14.2314 4.84768 15.2622 5.93304 15.9874C7.01841 16.7126 8.29445 17.0997 9.59981 17.0997C11.3496 17.0977 13.0272 16.4017 14.2645 15.1644C15.5018 13.9271 16.1978 12.2495 16.1998 10.4997Z'
      fill='#F93737'
    />
  </svg>
);

export const check: React.FC<Props> = ({
  fill = 'none',
  stroke = '',
  className = 'w-[19px] h-[19px]',
}: Props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    className={className}
    viewBox='0 0 19 19'
    fill={fill}
    stroke={stroke}
  >
    <path
      opacity='0.2'
      d='M16.625 9.5C16.625 10.9092 16.2071 12.2867 15.4242 13.4584C14.6413 14.6301 13.5285 15.5434 12.2266 16.0826C10.9247 16.6219 9.4921 16.763 8.10998 16.4881C6.72787 16.2132 5.45832 15.5346 4.46187 14.5381C3.46542 13.5417 2.78683 12.2721 2.51191 10.89C2.23699 9.5079 2.37809 8.0753 2.91736 6.77338C3.45664 5.47146 4.36987 4.35868 5.54157 3.57578C6.71327 2.79287 8.09081 2.375 9.5 2.375C11.3897 2.375 13.2019 3.12567 14.5381 4.46186C15.8743 5.79806 16.625 7.61033 16.625 9.5Z'
      fill='#228B22'
    />
    <path
      d='M12.8888 7.29867C12.944 7.35382 12.9878 7.4193 13.0177 7.49138C13.0476 7.56346 13.063 7.64072 13.063 7.71875C13.063 7.79678 13.0476 7.87404 13.0177 7.94612C12.9878 8.0182 12.944 8.08368 12.8888 8.13883L8.73258 12.2951C8.67744 12.3503 8.61195 12.3941 8.53987 12.424C8.46779 12.4538 8.39053 12.4692 8.3125 12.4692C8.23448 12.4692 8.15721 12.4538 8.08513 12.424C8.01305 12.3941 7.94757 12.3503 7.89243 12.2951L6.11118 10.5138C5.99976 10.4024 5.93717 10.2513 5.93717 10.0938C5.93717 9.93619 5.99976 9.78508 6.11118 9.67367C6.22259 9.56226 6.37369 9.49967 6.53125 9.49967C6.68881 9.49967 6.83992 9.56226 6.95133 9.67367L8.3125 11.0356L12.0487 7.29867C12.1038 7.24347 12.1693 7.19967 12.2414 7.16979C12.3135 7.13991 12.3907 7.12453 12.4688 7.12453C12.5468 7.12453 12.624 7.13991 12.6961 7.16979C12.7682 7.19967 12.8337 7.24347 12.8888 7.29867ZM17.2188 9.5C17.2188 11.0266 16.7661 12.519 15.9179 13.7883C15.0698 15.0576 13.8643 16.047 12.4538 16.6312C11.0434 17.2154 9.49144 17.3683 7.99415 17.0704C6.49686 16.7726 5.12151 16.0375 4.04202 14.958C2.96254 13.8785 2.2274 12.5031 1.92957 11.0059C1.63174 9.50856 1.78459 7.95658 2.36881 6.54616C2.95302 5.13574 3.94235 3.93024 5.2117 3.08209C6.48104 2.23395 7.97338 1.78125 9.5 1.78125C11.5465 1.78341 13.5085 2.59733 14.9556 4.04441C16.4027 5.49148 17.2166 7.45352 17.2188 9.5ZM16.0313 9.5C16.0313 8.20824 15.6482 6.94549 14.9305 5.87143C14.2129 4.79737 13.1928 3.96025 11.9994 3.46591C10.806 2.97158 9.49276 2.84224 8.22582 3.09425C6.95888 3.34626 5.79512 3.9683 4.88171 4.88171C3.9683 5.79512 3.34626 6.95888 3.09425 8.22582C2.84224 9.49275 2.97158 10.806 3.46592 11.9994C3.96025 13.1928 4.79738 14.2129 5.87144 14.9305C6.94549 15.6482 8.20824 16.0312 9.5 16.0312C11.2316 16.0293 12.8917 15.3405 14.1161 14.1161C15.3405 12.8917 16.0293 11.2316 16.0313 9.5Z'
      fill='#228B22'
    />
  </svg>
);

export const sampleCheck: React.FC<Props> = ({
  fill = 'none',
  stroke = '',
  className = 'w-[25px] h-[24px]',
}: Props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    className={className}
    viewBox='0 0 25 24'
    fill={fill}
    stroke={stroke}
  >
    <path
      d='M11.0738 15.4548C10.9613 15.5673 10.802 15.661 10.6613 15.661C10.5207 15.661 10.3613 15.5626 10.2441 15.4501L7.61914 12.8251L8.45352 11.9907L10.666 14.2032L16.516 8.31104L17.3363 9.15947L11.0738 15.4548Z'
      fill='white'
    />
  </svg>
);
